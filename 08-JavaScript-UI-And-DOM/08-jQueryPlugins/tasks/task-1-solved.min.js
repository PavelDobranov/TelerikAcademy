// function solve() {
//   var t = "select",
//     e = "The element must be a SELECT",
//     a = "<div />",
//     n = "option",
//     d = "dropdown-list",
//     o = "current",
//     r = "options-container",
//     l = "position",
//     i = "absolute",
//     s = "data-value",
//     c = "data-index",
//     h = "dropdown-item",
//     p = "click",
//     v = ".current",
//     u = "display",
//     m = "none",
//     peeeeeeshooooo = "Select a value",
//     w = ".dropdown-item";

//   return function (selector) {
//     var $this = $(selector),
//       $options,
//       $wrapper,
//       $currentElementContainer,
//       $optionsContainer;

//     if (!$this.is('select')) throw new Error('The element must be a SELECT');

//     $options = $this.find('option');
//     $wrapper = $('<div />').addClass('dropdown-list');
//     $currentElementContainer = $('<div />').addClass('current');

//     $wrapper.append($currentElementContainer);

//     $optionsContainer =
//     $('<div />')
//       .addClass('options-container')
//       .hide()
//       .css('position', 'absolute');

//     $options.each(function (index, option) {
//       var $option = $(option);
//       index === $this.get(0).selectedIndex && $currentElementContainer.html($option.html()).attr(s, $option.val()),
//       $(a).addClass(h).html($option.html()).attr(s, $option.val()).attr(c, index).appendTo($optionsContainer)
//     }),

//     $wrapper.append($optionsContainer),
//     $this.before($wrapper),
//     $wrapper.prepend($this),

//     $wrapper.on(p, v, function () {
//       $optionsContainer.css(u) === m ? ($optionsContainer.show(), $currentElementContainer.html(peeeeeeshooooo)) : $optionsContainer.hide()
//     }),

//     $wrapper.on(p, w, function () {
//       var t = $(this);
//       $currentElementContainer.html(t.html()).attr(s, t.val()), $this.val(t.attr(s)), $optionsContainer.hide()
//     }), $this.hide()
//   }
// }