|=============================================================|
| Problem 1. Strings in C#.                                   |
|  - Describe the strings in C#.                              |
|  - What is typical for the string data type?                |
|  - Describe the most important methods of the String class. |
|=============================================================|

Strings in C#
=============
A string is an object of type String whose value is text. Internally, the text is stored as a sequential read-only collection of Char objects.
There is no null-terminating character at the end of a C# string; therefore a C# string can contain any number of embedded null characters ('\0'). 
The Length property of a string represents the number of Char objects it contains, not the number of Unicode characters. To access the individual 
Unicode code points in a string, use the StringInfo object.

Immutability of String Objects
==============================
String objects are immutable: they cannot be changed after they have been created. All of the String methods and C# operators that appear to modify
a string actually return the results in a new string object. In the following example, when the contents of s1 and s2 are concatenated to form a single string, 
the two original strings are unmodified. The += operator creates a new string that contains the combined contents. That new object is assigned to the variable s1, 
and the original object that was assigned to s1 is released for garbage collection because no other variable holds a reference to it.

Most important methods of the String class
==========================================
 - IndexOf(Char) 	Reports the zero-based index of the first occurrence of the specified Unicode character in this string.
 - IndexOf(String) 	Reports the zero-based index of the first occurrence of the specified string in this instance.
 - LastIndexOf(Char) 	Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.
 - LastIndexOf(String) 	Reports the zero-based index position of the last occurrence of a specified string within this instance.
 - Remove(Int32) 	Returns a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.
 - Remove(Int32, Int32) 	Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.
 - Replace(Char, Char) 	Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.
 - Replace(String, String) 	Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.
 - Split(Char[]) 	Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array.
 - Split(Char[], StringSplitOptions) 	Returns a string array that contains the substrings in this string that are delimited by elements of a specified Unicode character array. A parameter specifies whether to return empty array elements.
 - Substring(Int32) 	Retrieves a substring from this instance. The substring starts at a specified character position and continues to the end of the string.
 - Substring(Int32, Int32) 	Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.
 - ToLower() 	Returns a copy of this string converted to lowercase.
 - ToUpper() 	Returns a copy of this string converted to uppercase.
 - Trim() 	Removes all leading and trailing white-space characters from the current String object.
 - Trim(Char[]) 	Removes all leading and trailing occurrences of a set of characters specified in an array from the current String object.
 - TrimEnd() 	Removes all trailing occurrences of a set of characters specified in an array from the current String object.
 - TrimStart() 	Removes all leading occurrences of a set of characters specified in an array from the current String object.
 - Contains() 	Returns a value indicating whether a specified substring occurs within this string.
 - Format(String, Object) 	Replaces one or more format items in a specified string with the string representation of a specified object.